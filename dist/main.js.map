{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/services/APIService.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./layout/layout.module\": [\n\t\t\"./src/app/layout/layout.module.ts\",\n\t\t\"layout-layout-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        loadChildren: './layout/layout.module#LayoutModule',\r\n        // canActivate: [AuthGuard]\r\n    },\r\n    // {\r\n    //     path: 'login',\r\n    //     loadChildren: './login/login.module#LoginModule'\r\n    // }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    constructor() {\r\n        //private translate: TranslateService\r\n        //translate.setDefaultLang('en');\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","import { APIService } from './shared/services/APIService';\r\nimport 'hammerjs'; \r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    \r\n    MatDialog,\r\n    MatTooltipModule\r\n\r\n\r\n\r\n} from '@angular/material';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nexport const createTranslateLoader = (http: HttpClient) => {\r\n    /* for development\r\n    return new TranslateHttpLoader(\r\n        http,\r\n        '/start-javascript/sb-admin-material/master/dist/assets/i18n/',\r\n        '.json'\r\n    );*/\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n};\r\n\r\n@NgModule({\r\n    declarations: [AppComponent],\r\n    imports: [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatSidenavModule,\r\n        MatToolbarModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        BrowserModule,\r\n        MatSelectModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        LayoutModule,\r\n        OverlayModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        HttpModule,\r\n        MatTooltipModule,\r\n        BrowserAnimationsModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: createTranslateLoader,\r\n                deps: [HttpClient]\r\n            }\r\n        })\r\n    ],\r\n    providers: [APIService,\r\n\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Provider } from './../modals/provider';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { } from '@angular/http';\r\nexport var _isCardDetail: boolean = true;\r\nexport function setCardDetail(val: boolean) {\r\n  _isCardDetail = val;\r\n}\r\n@Injectable()\r\nexport class APIService {\r\n  constructor(private httpClient: HttpClient, private http: Http) { }\r\n  private _providerListDisplay: Array<Provider> = new Array<Provider>();\r\n  public getproviderListDisplay(): Array<Provider> {\r\n    return this._providerListDisplay;\r\n  }\r\n  public setproviderListDisplay(value: Array<Provider>) {\r\n    this._providerListDisplay = value;\r\n  }\r\n\r\n  get() {\r\n    const creditentials = {\r\n      username: 'vmorasa1',\r\n      password: 'Addanki@2662'\r\n    };\r\n\r\n    return this.httpClient.post(\"//api-retrieveassets-exchange-qa.us-e2.cloudhub.io/organization/portal/assets\", creditentials)\r\n  }\r\n  getLoggedinUser() {\r\n    return this.httpClient.get('https://hcare-planhub.cfapps.io/getApi/Healthcare');\r\n  }\r\n} \r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}